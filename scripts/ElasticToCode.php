<?php
$opts = 'h:';

$options = getopt($opts);

$_HOST = isset($options['h']) ? $options['h'] : '';

if(!$_HOST) {
    exit('-h<host> required');
}

require_once '../localsettings.php';
require_once '../init.php';

$indexes = Elastic_A::GetIndexes();

if(!is_dir('ElasticA')) {
    mkdir('ElasticA');
}

if(!is_dir('ElasticA/schema')) {
    mkdir('ElasticA/schema');
}

foreach($indexes as $index => $settings) {
    Log::Insert($index, true);
    $mappings = Elastic_A::GetMappings($index);

    foreach ($mappings[$index]['mappings'] as $type => $props) {
        $properties = $props['properties'];


        $classname = preg_replace('/[^a-z0-9]/si', ' ', $index . '_' . $type);
        $classname = ucwords($classname);
        $classname = str_replace(' ', '', $classname);
        $classname .= 'Class';
        $classname = 'Elastic_' . $classname;
        $schemaname = $classname . '_schema';

        $prop_comments = [];
        $prop_code = [];

        foreach ($properties as $name => $prop_type) {
            $prop_comments[] = ' * @property ' . (isset($prop_type['properties']) ? 'object' : $prop_type['type']) . ' ' . $name;
            $prop_code[] = '    public $' . $name . ';';
        }

        $code = '<?php
/**
 * ' . $schemaname . '
 * @author Ben Kucenski <bkucenski@gmail.com>
 * generated by QuickDRY
 *
' . implode(PHP_EOL, $prop_comments) . '
 */
 
class ' . $schemaname . ' extends Elastic_A
{
    public static $_index = \'' . $index . '\';
    public static $_type = \'' . $type . '\';
    
' . implode(PHP_EOL, $prop_code) . '
}
';
        $fp = fopen('ElasticA/schema/' . $schemaname . '.php', 'w');
        fwrite($fp, $code);
        fclose($fp);

        $code = '<?php
/**
 * ' . $classname . '
 * @author Ben Kucenski <bkucenski@gmail.com>
 * generated by QuickDRY
 *
 */
 
class ' . $classname . ' extends ' . $schemaname . '
{

}
';
        $fp = fopen('ElasticA/' . $classname . '.php', 'w');
        fwrite($fp, $code);
        fclose($fp);
    }
}